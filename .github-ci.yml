pipeline{
    agent any
    options {
  buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '', daysToKeepStr: '1', numToKeepStr: '5')
}
    stages{
        stage('Git checkout'){
            steps{
             git branch: 'main', credentialsId: 'admin', url: 'https://github.com/veduruchandrashekar/reddy-app.git'
            }
        }
        stage('Maven build'){
            steps{
                sh 'mvn clean package'
            }
        }
        
        stage('Static Code Analysis') {
      environment {
        SONAR_URL = "http://IP address:9000"
      }
      steps {
        withCredentials([string(credentialsId: 'sonarqube', variable: 'SONAR_AUTH_TOKEN')]) {
          sh 'mvn sonar:sonar -Dsonar.login=$SONAR_AUTH_TOKEN -Dsonar.host.url=${SONAR_URL}'
        }
      }
    }
        
        stage('Docker build'){
            steps{
                sh 'docker build -t veduruchandrashekar/hr-api .'
            }
        }
        
        stage('Docker push'){
            steps{
                withCredentials([usernamePassword(credentialsId: 'veduruchandrashekar', passwordVariable: 'password', usernameVariable: 'username')]) {
                sh 'docker login -u ${username} -p ${password}'
             }
               sh 'docker push veduruchandrashekar/hr-api:latest'
            }
            
        }
        
        stage('k8s Deploy'){
            steps{
                sh 'kubectl create -f deployments.yml'
                sh 'kubectl create -f services.yml'
            }
        }
       
      
    }
}
